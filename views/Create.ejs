<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Details and Seating Arrangement</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
        }

        .container {
            max-width: 1200px;
            margin: 20px auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        form {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .form-group {
            flex: 1 1 calc(50% - 20px);
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .seating-container {
            margin-top: 20px;
        }

        .seating-grid {
            display: grid;
            gap: 20px;
            margin-bottom: 10px;
            row-gap:30px;
            justify-content: center;
            grid-template-columns: repeat(auto-fill, minmax(50px, 1fr)); /* Adjusts column width to be responsive */
            grid-template-rows: auto;
        }

        .seat {
            width: 40px;
            height: 40px;
            background-color: #dcdcdc;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 14px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .seat.standard {
            background-color: #4CAF50;
        }

        .seat.vip {
            background-color: #FF9800;
        }

        .seat.deluxe {
            background-color: #9C27B0;
        }

        .form-actions {
            width: 100%;
            text-align: center;
            margin-top: 20px;
        }

        .form-actions button {
            padding: 10px 20px;
            font-size: 16px;
            color: white;
            background-color: #007bff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .form-actions button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
   <div class="container">
        <h1>Owner: Create Movie and Seating Arrangement</h1>
        <form id="movie-form">
            <!-- Movie Details -->
            <div class="form-group">
                <label for="moviename">Movie Name</label>
                <input type="text" id="moviename" name="moviename" required>
            </div>
            <div class="form-group">
                <label for="movieprice">Ticket Price</label>
                <input type="number" id="movieprice" name="movieprice" required>
            </div>
            <div class="form-group">
                <label for="movieimage">Movie Image URL</label>
                <input type="text" id="movieimage" name="movieimage" required>
            </div>
            <div class="form-group">
                <label for="movieabout">About the Movie</label>
                <input type="text" id="movieabout" name="movieAbout" required>
            </div>
            <div class="form-group">
                <label for="moviedate">Date</label>
                <input type="date" id="moviedate" name="movieDate" required>
            </div>
            <div class="form-group">
                <label for="location">Location</label>
                <input type="text" id="location" name="Location" required>
            </div>
            <div class="form-group">
                <label for="genre">Genre</label>
                <select id="genre" name="genre" required>
                    <option value="Thriller">Thriller</option>
                    <option value="Action">Action</option>
                    <option value="Comedy">Comedy</option>
                    <option value="Romantic">Romantic</option>
                </select>
            </div>
            <!-- Seating Arrangement -->
            <div class="form-group">
                <label for="rows">Number of Rows</label>
                <input type="number" id="rows" min="1" max="26" value="10" required>
            </div>
            <div class="form-group">
                <label for="cols">Seats Per Row</label>
                <input type="number" id="cols" min="1" value="10" required>
            </div>
            <div class="seating-container">
                <h2>Seating Arrangement</h2>
                <div id="seating-grid" class="seating-grid"></div>
            </div>
            <!-- Form Actions -->
            <div class="form-actions">
                <button type="button" onclick="generateSeating()"  id="generate-seating-btn">Generate Seating</button>
                <button type="submit" id="submit-btn">Submit</button>
            </div>
        </form>
    </div>
    <script>
       const seatingGrid = document.getElementById('seating-grid');

// This function generates the seating grid with rows and columns


function generateSeating() {
    const rows = parseInt(document.getElementById('rows').value);
    const cols = parseInt(document.getElementById('cols').value);
    seatingGrid.innerHTML = ''; // Clear existing seats

    seatingGrid.style.gridTemplateColumns = `repeat(${cols}, 1fr)`; // Create grid with dynamic columns

    for (let i = 0; i < rows; i++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'row'; // Create a row container
        rowDiv.setAttribute('data-row', String.fromCharCode(65 + i)); // Assign row name (A, B, C, ...)

        for (let j = 0; j < cols; j++) {
            const seat = document.createElement('div');
            seat.className = 'seat standard'; // Default seat class
            seat.textContent = String.fromCharCode(65 + i) + (j + 1); // Seat number (A1, A2, ...)

            // Attach the event to toggle the seat type (standard, vip, deluxe)
            seat.addEventListener('click', () => toggleSeatType(seat));

            rowDiv.appendChild(seat); // Add seat to the row
        }

        seatingGrid.appendChild(rowDiv); // Append row to the grid
    }
}


// This function toggles the seat type between standard, vip, and deluxe
function toggleSeatType(seat) {
    const currentType = seat.classList.contains('standard')
        ? 'standard'
        : seat.classList.contains('vip')
        ? 'vip'
        : 'deluxe';

    // Rotate through seat types
    const nextType = currentType === 'standard' ? 'vip' : currentType === 'vip' ? 'deluxe' : 'standard';
    seat.className = `seat ${nextType}`;
}

// Handling form submission to send movie details with seating arrangements to the backend
document.getElementById('movie-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    const movieDetails = {
        moviename: document.getElementById('moviename').value,
        movieprice: document.getElementById('movieprice').value,
        movieimage: document.getElementById('movieimage').value,
        movieabout: document.getElementById('movieabout').value,
        moviedate: document.getElementById('moviedate').value,
        location: document.getElementById('location').value,
        genre: document.getElementById('genre').value,
        seating: generateSeatingData() // Get seating data
    };

    console.log('Movie Details:', movieDetails);

    try {
        const response = await fetch('http://localhost:3000/owner/created', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(movieDetails), // Use the object, not a string literal
        });

        if (response.ok) {
            const data = await response.json();
            alert('Movie details submitted successfully');
            console.log('Response:', data);
        } else {
            console.error('Error:', response.statusText);
            alert('Failed to submit movie details');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while submitting movie details');
    }
});

// This function generates the seating data as expected by the backend
function generateSeatingData() {
    const rows = parseInt(document.getElementById('rows').value);
    const cols = parseInt(document.getElementById('cols').value);
    const seatingData = [];

    for (let i = 0; i < rows; i++) {
        const row = String.fromCharCode(65 + i); // Row label (A, B, C, ...)
        const seats = [];
        
        for (let j = 0; j < cols; j++) {
            const seatNumber = (j + 1).toString(); // Seat number as string (1, 2, 3, ...)
            const seatType = document.querySelector(`[data-row="${row}"] .seat:nth-child(${j + 1})`).classList.contains('vip')
                ? 'vip'
                : document.querySelector(`[data-row="${row}"] .seat:nth-child(${j + 1})`).classList.contains('deluxe')
                ? 'deluxe'
                : 'standard';

            seats.push({
                seatingNumber: seatNumber,
                type: seatType,
                status: 'available', // Initially, all seats are available
            });
        }

        seatingData.push({
            row: row,
            seats: seats
        });
    }

    return seatingData;
}

// Initialize default seating
generateSeating();

    </script>
</body>
</html>
